# ========================================
# CAPSTONE API FIVERR - STAGING DOCKER COMPOSE
# ========================================

version: '3.8'

services:
  # MySQL Database (Staging)
  mysql:
    image: mysql:8.0
    container_name: capstone-mysql-staging
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - mysql_staging_data:/var/lib/mysql
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql
      - ./staging/backups:/backups
    ports:
      - "3307:3306"
    networks:
      - capstone-staging-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # NestJS API (Staging)
  api:
    image: ${REGISTRY}/${IMAGE_NAME}:staging
    container_name: capstone-api-staging
    restart: unless-stopped
    environment:
      NODE_ENV: staging
      PORT: 3000
      DATABASE_URL: mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@mysql:3306/${DATABASE_NAME}
      JWT_ACCESS_SECRET: ${ACCESS_TOKEN_SECRET}
      JWT_REFRESH_SECRET: ${REFRESH_TOKEN_SECRET}
      JWT_ACCESS_EXPIRES: ${ACCESS_TOKEN_EXPIRES}
      JWT_REFRESH_EXPIRES: ${REFRESH_TOKEN_EXPIRES}
      API_PREFIX: ${API_PREFIX}
      CORS_ORIGIN: ${CORS_ORIGIN}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS}
      LOG_LEVEL: ${LOG_LEVEL}
      DEBUG: ${DEBUG:-*}
    ports:
      - "3001:3000"
    volumes:
      - ./staging/logs:/app/logs
      - ./staging/uploads:/app/uploads
    networks:
      - capstone-staging-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      timeout: 10s
      retries: 5
      interval: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Nginx Staging (HTTP only)
  nginx-staging:
    image: nginx:alpine
    container_name: capstone-nginx-staging
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/conf/nginx.staging.conf:/etc/nginx/nginx.conf:ro
      - ./staging/logs/nginx:/var/log/nginx
      - ./public:/var/www/html
    networks:
      - capstone-staging-network
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      timeout: 10s
      retries: 3
      interval: 30s
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
        reservations:
          memory: 64M
          cpus: '0.05'

# Networks
networks:
  capstone-staging-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

# Volumes
volumes:
  mysql_staging_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./staging/data/mysql

name: CD - Deploy to Production

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      confirm_deploy:
        description: 'Type "DEPLOY" to confirm production deployment'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Deploy to Production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    
    # Prevent accidental deployments
    if: |
      github.event_name == 'release' ||
      (github.event_name == 'workflow_dispatch' && 
       inputs.confirm_deploy == 'DEPLOY')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Deploy to production server
        run: |
          echo "üöÄ Deploying to production environment..."
          echo "Image: ${{ steps.meta.outputs.tags }}"
          echo "Version: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          
      - name: Run production health check
        run: |
          echo "üè• Running production health checks..."
          # Add your production health check logic here
          # curl -f https://api.example.com/health || exit 1
          
      - name: Run smoke tests
        run: |
          echo "üß™ Running smoke tests..."
          # Add your smoke test logic here
          
      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Production deployment successful!"
            echo "üéâ Application is now live in production!"
          else
            echo "‚ùå Production deployment failed!"
            echo "üö® Rollback may be required!"
          fi
          
      - name: Create deployment record
        if: success()
        run: |
          echo "üìù Creating deployment record..."
          # Add your deployment tracking logic here
